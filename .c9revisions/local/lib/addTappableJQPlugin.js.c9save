{"ts":1366149685913,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function addTappableJQPlugin(){\n\n    $.fn.onButtonTap = function(tapCB, longCB){\n        var down = function (){\n            this.addClass('buttonDown');\n        };\n        var up = function (){\n            this.removeClass('buttonDown');\n        };\n        this.ontap(down, up, tapCB, longCB);\n    }\n\n    $.fn.ontap = function(downCB, upCB, tapCB, longCB){\n        new TapManager(this, downCB, upCB, tapCB, longCB)\n    }\n\n    function TapManager(dom, onDown, onUp, onTap, onLong){\n        this.dom = dom;\n        this.onDown = onDown || function(){ };\n        this.onUp = onUp || function(){ };\n        this.onTap = onTap || function(){ };\n        this.onLong = onLong || function(){ };\n        this.bindFnsToDom();\n\n        this.state = {\n            startX: 0,\n            startY: 0,\n            potentialTap: false,\n        };\n\n        this.registerEvents();\n    }\n\n    TapManager.prototype = {\n        //========================\n        //  STATE\n        //========================\n        down: function(x, y){\n            this.state.startX = x;\n            this.state.startY = y;\n            this.state.potentialTap = true;\n            this.onDown()\n            setTimeout(this.checkLong.bind(this), 500);\n        },\n        move: function(x, y){\n            if (this.state.potentialTap && this.movedTooMuch(x, y)){\n                this.state.potentialTap = false;\n                this.onUp();\n            }\n        },\n        movedTooMuch: function(x, y){\n            return (window.Math.abs(x - this.state.startX) > 10 || \n                    window.Math.abs(y - this.state.startY) > 10);\n        },\n        up: function(){\n            if (this.state.potentialTap){\n                this.onUp();\n                this.onTap();\n                this.state.potentialTap = false;\n            }\n        },\n        exit: function(){\n            if (this.state.potentialTap){\n                this.state.potentialTap = false;\n                this.onUp();\n            }\n        },\n        checkLong: function(){\n            if (this.state.potentialTap){\n                this.state.potentialTap = false;\n                this.onLong();\n                this.onUp();\n            }\n        },\n\n        //========================\n        //  INIT\n        //========================\n\n        //default jq behavior\n        bindFnsToDom: function(){\n            this.onDown = this.onDown.bind(this.dom);\n            this.onUp = this.onUp.bind(this.dom);\n            this.onTap = this.onTap.bind(this.dom);\n            this.onLong = this.onLong.bind(this.dom);\n        },\n        registerEvents: function(){\n            if ('ontouchstart' in document.documentElement)\n                this.registerTouchEvents();\n            else \n                this.registerMouseEvents();\n        },\n        registerTouchEvents: function(){\n            this.dom.on('touchstart', function(event){\n                var x = event.originalEvent.touches[0].clientX;\n                var y = event.originalEvent.touches[0].clientY;\n                this.down(x, y);\n            }.bind(this));\n            this.dom.on('touchend', function(event){\n                this.up();\n            }.bind(this));\n            this.dom.on('touchleave', function(event){\n                this.exit();\n            }.bind(this));\n            this.dom.on('touchmove', function(event){\n                var x = event.originalEvent.touches[0].clientX;\n                var y = event.originalEvent.touches[0].clientY;\n                this.move(x, y);\n            }.bind(this));\n        },\n        registerMouseEvents: function(){\n            this.dom.on('mousedown', function(event){\n                this.down(event.clientX, event.clientY);\n            }.bind(this));\n            this.dom.on('mouseout', function(event){\n                this.exit();\n            }.bind(this));\n            this.dom.on('mouseup', function(event){\n                this.up();\n            }.bind(this));\n        }\n    }\n}\n\n\nwindow.addEventListener('load', function(){\n    addTappableJQPlugin();\n});"]],"start1":0,"start2":0,"length1":0,"length2":4016}]],"length":4016}
